#!/bin/sh

PROGRAMSDIR="${PROGRAMSDIR:-$HOME/programs}"
LOCAL_PROGRAMS="dwm st dmenu dwmblocks slock sent p"
GIT_PROVIDER="gitlab.com"
GIT_USERNAME="osamaragab"

sudocmd="$(command -v doas 2>/dev/null || command -v sudo 2>/dev/null)"

ifinst() { command -v "$@" >/dev/null 2>&1; }

updatepkgs() {
	"$sudocmd" pacman -Syu --noconfirm
	yay -Syua --noconfirm
	ifinst rustup && rustup update
	ifinst pnpm && pnpm update -g
	ifinst gem && gem update
	ifinst nvim && nvim --headless -c "autocmd User PackerComplete quitall" -c "PackerSync"
}

updatelocal() {
	for p in $LOCAL_PROGRAMS; do
		case "$p" in
			dwm|st|dmenu|slock|sent)
				upstream_url="git://git.suckless.org/$p"
				upstream_branch="master"
				;;
			dwmblocks)
				upstream_url="https://github.com/torrinfail/dwmblocks.git"
				upstream_branch="master"
				;;
		esac
		url="git@$GIT_PROVIDER:$GIT_USERNAME/$p.git"
		dir="$PROGRAMSDIR/$p"
		printf "\e[0;32m[updating]\e[0m %s (\e[0;34m%s\e[0m)\n" "$p" "$dir"
		[ -d "$dir" ] || git clone "$url" "$dir"
		cd "$dir" && git pull || return 1
		if [ "$upstream_url" ]; then
			git remote add upstream "$upstream_url"
			git fetch upstream "$upstream_branch"
			git merge "upstream/$upstream_branch"
		fi
		[ -s .gitmodules ] && git submodule update --init --recursive
		if [ -s Makefile ] && grep -q "^install:" Makefile; then
			"$sudocmd" make install || return 1
			grep -q "^clean:" Makefile && make clean
		fi
	done
}

clean() {
	"$sudocmd" pacman -Scvv --noconfirm
	yay -Scvva --noconfirm
}

for cmd in "${@:-all}"; do
	case "$cmd" in
		pkgs) updatepkgs ;;
		local) updatelocal ;;
		clean) clean ;;
		all)
			updatepkgs
			updatelocal
			clean
			;;
		*) echo "$(basename "$0"): unknown command \"$cmd\"" >&2; exit 1 ;;
	esac
done
