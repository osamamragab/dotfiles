#!/bin/sh

PROGRAMSDIR="${PROGRAMSDIR:-$HOME/programs}"

sudocmd="$(command -v doas 2>/dev/null || echo sudo)"
doas() { $sudocmd "$@"; }

ifinst() { command -v "$1" >/dev/null 2>&1; }

reponame() { basename "$1" | sed "s/\.git$//"; }

gitupdate() {
	[ $# -eq 3 ] || (echo "$(basename "$0"): gitupdate: requires 3 arguments but got $#" >&2; exit 1)
	url="$1"
	dir="$PROGRAMSDIR/$(reponame "$url")"
	# sre="$(echo "$2" | cut -d "/" -f 1)"
	sbr="$(echo "$2" | cut -d "/" -f 2)"
	ure="$(echo "$3" | cut -d "/" -f 1)"
	ubr="$(echo "$3" | cut -d "/" -f 2)"
	echo; echo "updating $dir..."
	[ -d "$dir" ] || git clone "$url" "$dir"
	cd "$dir" || exit 1
	git checkout "$sbr"
	git fetch "$ure" "$ubr"
	git merge "$ure/$ubr"
	[ -s .gitmodules ] && git submodule update --init --recursive
	if [ -s Makefile ]; then
		[ "$(basename "$(pwd)")" = "nnn" ] && args="O_NERD=1"
		if grep -q "^install:" Makefile; then
			echo "$args" | xargs "$sudocmd" make install || exit 1
			grep -q "^clean:" Makefile && make clean
		fi
	fi
}

optpkgs=0
optlocal=0
optclean=0
for arg in "${@:--all}"; do
	[ "${arg#--}" != "$arg" ] && arg="${arg#-}"
	case "$arg" in
		-pkgs) optpkgs=1 ;;
		-local) optlocal=1 ;;
		-clean) optclean=1 ;;
		-all)
			optpkgs=1
			optlocal=1
			optclean=1
			;;
	esac
done

if [ $optpkgs -eq 1 ]; then
	doas xbps-install -Syu || exit 1
	ifinst rustup && rustup update
	ifinst pip && python3 -m pip install -U pip && pip list -o --format=freeze | grep -v "^\-e" | cut -d "=" -f 1  | xargs -n1 pip install -U
	ifinst gem && gem update
	ifinst deno && deno upgrade
	ifinst yarn && yarn global upgrade
	ifinst flatpak && flatpak update
	# ifinst v && v upgrade
	# ifinst flutter && flutter upgrade
	[ "$EDITOR" ] && ifinst "$EDITOR" && case "$EDITOR" in
		vim) vim +PlugUpgrade +PlugUpdate +qa ;;
		nvim) nvim +PlugUpgrade +PlugUpdate +TSUpdateSync +qa ;;
	esac
fi

if [ $optlocal -eq 1 ]; then
	for p in dwm st dmenu dwmblocks surf tabbed slock sent; do
		br="master"
		[ "$p" = "surf" ] && br="surf-webkit2"
		gitupdate "git@gitlab.com:osamai/$p.git" "origin/main" "upstream/$br"
	done
	repos="git@github.com:LukeSmithxyz/mutt-wizard.git git@github.com:jarun/nnn.git git@github.com:krpors/hx.git git@github.com:rupa/z.git git@github.com:sumneko/lua-language-server.git git@github.com:elixir-lsp/elixir-ls.git"
	for r in $repos; do
		gitupdate "$r" origin/master origin/master
		case "$(reponame "$r")" in
			z)
				doas cp -f "$PROGRAMSDIR/z/z.1" /usr/local/share/man/man1/z.1 &&
					doas chmod 644 /usr/local/share/man/man1/z.1
				;;
			lua-language-server)
				cd 3rd/luamake &&
					./compile/install.sh &&
					cd ../.. &&
					./3rd/luamake/luamake rebuild
				;;
			elixir-ls)
				mix deps.get &&
					mix compile &&
					mix elixir_ls.release -o bin
				;;
		esac
	done
fi

if [ $optclean -eq 1 ]; then
	doas xbps-remove -Ooy
	doas vkpurge rm all
fi
