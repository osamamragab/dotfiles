#!/bin/sh

PROGRAMSDIR="${PROGRAMSDIR:-$HOME/programs}"
LOCALPROGRAMS="dwm st dmenu dwmblocks surf tabbed slock sent"
LOCALREPOS="git@github.com:osamai/p.git git@github.com:jarun/nnn.git git@github.com:behdad/bicon.git git@github.com:LukeSmithxyz/mutt-wizard.git git@github.com:krpors/hx.git git@github.com:rupa/z.git git@github.com:pyenv/pyenv.git git@github.com:elixir-lsp/elixir-ls.git"

sudocmd="$(command -v doas 2>/dev/null || echo sudo)"
doas() { $sudocmd "$@"; }

ifinst() { command -v "$1" >/dev/null 2>&1; }

reponame() { basename "$1" | sed "s/\.git$//"; }

# params: repo_url, remote_name, remote_branch, [remote_url]
gitupdate() {
	dir="$PROGRAMSDIR/$(reponame "$1")"
	echo "updating $dir..."
	[ -d "$dir" ] || git clone "$1" "$dir"
	cd "$dir" || return 1
	[ "$4" ] && git remote add "$2" "$4" >/dev/null 2>&1
	git fetch "$2" "$3"
	git merge "$2/$3"
	[ -s .gitmodules ] && git submodule update --init --recursive
}

makeinstall() {
	if grep -q "^install:" Makefile; then
		echo "$@" | xargs "$sudocmd" make install || return 1
		grep -q "^clean:" Makefile && make clean
	fi
}

updatepkgs() {
	doas xbps-install -Syu
	ifinst rustup && rustup update
	ifinst bun && bun upgrade
	ifinst deno && deno upgrade
	ifinst pnpm && pnpm update -g
	ifinst gem && gem update
	ifinst sdk && sdk selfupdate
	ifinst nvim && nvim --headless -c "autocmd User PackerComplete quitall" -c "PackerSync"
	# ifinst pip && python3 -m pip install -U pip && pip list -o --format=freeze | grep -v "^\-e" | cut -d "=" -f 1  | xargs -n1 pip install -U
	# ifinst flatpak && flatpak update -y
	# ifinst flutter && flutter upgrade
}

clean() {
	doas xbps-remove -Ooy
	doas vkpurge rm all
}

updatelocal() {
	for p in $LOCALPROGRAMS; do
		ubr="master"
		ure="git://git.suckless.org/$p"
		case "$p" in
			surf) ubr="surf-webkit2" ;;
			dwmblocks) ure="git@github.com:torrinfail/dwmblocks.git" ;;
		esac
		gitupdate "git@gitlab.com:osamai/$p.git" upstream "$ubr" "$ure" || continue
		[ -s Makefile ] && makeinstall
	done

	for r in $LOCALREPOS; do
		gitupdate "$r" origin "$(git remote show origin | sed -n "/HEAD branch:/s/.* //p")" || continue
		case "$(reponame "$r")" in
			nnn)
				[ -s Makefile ] && makeinstall O_NERD=1
				;;
			bicon)
				./autogen.sh && ./configure && make && doas make install
				;;
			z)
				doas cp -f "$PROGRAMSDIR/z/z.1" /usr/local/share/man/man1/z.1 &&
					doas chmod 644 /usr/local/share/man/man1/z.1
				;;
			pyenv)
				./src/configure &&
					make -C src &&
					doas ln -sf "$(readlink -f ./bin/pyenv)" /usr/local/bin
				;;
			elixir-ls)
				mix deps.get &&
					mix compile &&
					mix elixir_ls.release -o bin
				;;
			*)
				[ -s Makefile ] && makeinstall
				;;
		esac
	done
}

for arg in "${@:-all}"; do
	case "$arg" in
		pkgs) updatepkgs ;;
		local) updatelocal ;;
		clean) clean ;;
		all)
			updatepkgs
			updatelocal
			clean
			;;
	esac
done
