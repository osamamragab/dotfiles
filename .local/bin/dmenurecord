#!/bin/sh

recfile="/tmp/recordinginfo"
outdir="$HOME/vids/recordings"
datefmt="+%Y%m%d-%H%M%S"

checkwebcam() {
	if [ ! -b /dev/video0 ]; then
		notify-send -a "$(basename "$0")" "Error" "webcam is not connected (/dev/video0)"
		exit 1
	fi
}

stoprecording() {
	recpid="$(sed -n 1p "$recfile")"
	kill -15 "$recpid"
	rm -f "$recfile"
	pkill -RTMIN+9 dwmblocks
	sleep 3
	kill -9 "$recpid" 2> /dev/null
}

if [ -s "$recfile" ]; then
	res="$(printf "no\\nyes" | dmenu -i -p "stop current recording?")"
	[ "$res" = "yes" ] && stoprecording
	exit
fi

choice="$1"
[ -z "$choice" ] && choice="$(printf "screencast\\nvideo\\nvideo (select)\\naudio\\nwebcam\\nwebcam (hi-def)" | dmenu -l 6 -i -p "record:")"

case "$choice" in
	screencast)
		ffmpeg -y \
			-f x11grab \
			-framerate 60 \
			-s "$(xdpyinfo | awk '/dimensions/{print $2}')" \
			-i "$DISPLAY" \
			-f alsa -i default \
			-r 30 \
			-c:v h264 -crf 0 -preset ultrafast -c:a aac \
			"$outdir/screencast-$(date "$datefmt").mp4" &
		;;
	video)
		ffmpeg \
			-f x11grab \
			-s "$(xdpyinfo | awk '/dimensions/{print $2}')" \
			-i "$DISPLAY" \
			-c:v libx264 -qp 0 -r 30 \
			"$outdir/video-$(date "$datefmt").mkv" &
		;;
	audio)
		ffmpeg \
			-f alsa -i default \
			-c:a flac \
			"$outdir/audio-$(date "$datefmt").flac" &
		;;
	"video (select)")
		slop -f "%x %y %w %h" > /tmp/slop
		read -r X Y W H < /tmp/slop
		rm /tmp/slop
		ffmpeg \
			-f x11grab \
			-framerate 60 \
			-video_size "$W"x"$H" \
			-i :0.0+"$X,$Y" \
			-c:v libx264 -qp 0 -r 30 \
			"$outdir/videoselected-$(date "$datefmt").mkv" &
		;;
	webcam)
		checkwebcam
		ffmpeg \
			-f v4l2 \
			-i /dev/video0 \
			-video_size 640x480 \
			"$outdir/webcam-$(date "$datefmt").mkv" &
		;;
	"webcam (hi-def)")
		checkwebcam
		ffmpeg \
			-f v4l2 \
			-i /dev/video0 \
			-video_size 1920x1080 \
			"$outdir/webcam-$(date "$datefmt").mkv" &
		;;
	stop) [ -s "$recfile" ] && (stoprecording && exit) || exit 1 ;;
	*) exit 1 ;;
esac

printf "%d\n%s" $! "$choice" > "$recfile"
pkill -RTMIN+9 dwmblocks
