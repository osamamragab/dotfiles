#!/bin/sh
# vim: wrap
# shellcheck disable=SC2164

cdir="$(dirname "$(readlink -f "$0")")"
if [ -x "$cdir/setup.sh" ]; then
	echo "running dotfiles setup script..."
	"$cdir/setup.sh"
fi

[ -s "$cdir/.config/shell/profile" ] &&
	DISPLAY="${DISPLAY:-:0}" . "$cdir/.config/shell/profile"

if ! command -v doas >/dev/null 2>&1; then
	echo "installing doas..."
	sudo xbps-install -Sy opendoas
	echo "permit nopass keepenv :wheel" | sudo tee /etc/doas.conf >/dev/null
fi

level="${1:-0}"

xi() {
	name="$1"
	pkgs=""
	shift
	while [ $# -gt 0 ]; do
		case "$1" in
			-*)
				c="$(echo "$1" | tr -cd "-" | wc -c)"
				[ "$c" -eq "${#1}" ] && [ "$level" -lt "${#1}" ] && break
				;;
			*)
				pkgs="$pkgs $1"
				;;
		esac
		shift
	done
	[ -z "$pkgs" ] && return
	[ "$name" != "_" ] && echo "installing $name..."
	# shellcheck disable=SC2086
	doas xbps-install -Sy $pkgs
}

echo "updating system..."
doas xbps-install -Sy xbps
doas xbps-install -Syu

xi "x" \
	xorg xorg-server xinit libX11-devel libXft-devel libXinerama libXinerama-devel libXrandr libXrandr-devel

xi "filesystems support" \
	fuse fuse-exfat mtpfs simple-mtpfs

xi "network manager" \
	NetworkManager ufw

xi "build tools" \
	gcc git make pkg-config

xi "general tools" \
	curl wget gnupg gnupg2 openssh pass passmenu keychain keepassxc tmux nnn slop maim dunst util-linux xdg-utils xtools time entr vsv mlocate fzy fzf ripgrep fd cronie libnotify xcompmgr xbanish urlview darkhttpd youtube-dl yt-dlp pam-gnupg wmctrl xdotool xclip yank clipmenu xwallpaper pmount autofs tar bsdtar xz zip unzip signify tlp tlp-rdw delta tig exiftool redshift newsboat srm trash-cli spt bat buku lftp xoris dragon \
	- lshw hwinfo rsync inotify-tools earlyoom sc-im android-tools scrcpy translate-shell xautolock miniserve youtube-viewer aria2 openntpd bluez lprng firejail qemu fribidi arandr tree glow catimg mdp screenkey git-extras git-lfs fbida zbar qrencode \
	-- flatpak flatpak-builder glab github-cli pcmanfm xarchiver ffmpegthumbnailer gnome-epub-thumbnailer

xi "manual pages" \
	man-pages man-pages-posix

xi "text editor" \
	vim neovim

xi "zsh" \
	zsh zsh-completions zsh-autosuggestions zsh-syntax-highlighting zsh-history-substring-search

xi "audio tools" \
	alsa-utils alsa-plugins-pulseaudio pulseaudio pulseaudio-utils pamixer pulsemixer apulse

xi "multimedia tools" \
	ffmpeg ImageMagick mpv nsxiv \
	-- playerctl mpv-mpris mpDris2

xi "music players" \
	mpd mpc ncmpcpp

xi "pdf tools" \
	zathura zathura-pdf-mupdf mupdf \
	- zathura-ps zathura-djvu \
	-- wkhtmltopdf

xi "video/photo/audio editors" \
	- gimp \
	-- openshot inkscape krita darktable audacity lmms obs

xi "system monitoring tools" \
	lm_sensors htop iftop powertop mon \
	- bmon atop iotop \
	-- gotop speedometer vnstat sysstat procs nmon wavemon dstat latencytop sysprof fio

xi "email tools" \
	neomutt msmtp isync notmuch

xi "chatting applications" \
	irssi \
	- weechat weechat-python \
	-- tuir toot Signal-Desktop telegram-desktop

xi "web browsers" \
	firefox w3m tor \
	- lynx amfora sacc surfraw ddgr \
	-- vimb lagrange torbrowser-launcher

xi "torrent tools" \
	transmission rtorrent \
	- btfs

xi "programming stuff" \
	clang lld tcc go rustup python3 lua nodejs R perl ruby c gdb valgrind strace ltrace clang-analyzer rust-analyzer pnpm yarn binutils upx delve jq jo xxd ired
	rustup-init
[ "$level" -gt 0 ] && xi _ clib gopls elixir sbcl clojure leiningen gef radare2 postgresql13 mariadb sqlite redis usql flex bison byacc clang-tools-extra shellcheck shfmt pylint black python3-ipython python3-numpy python3-matplotlib python3-scipy python3-jupyter jupyterlab
go install -v golang.org/x/tools/gopls@latest github.com/google/pprof@latest github.com/securego/gosec@latest honnef.co/go/tools/cmd/staticcheck@latest
if [ "$level" -gt 1 ]; then
	xi _ clisp erlang ctags grpc protobuf terraform tflint tokei misspell pgcli dive hexedit hyperfine svgcleaner
	go install -v google.golang.org/protobuf/cmd/protoc-gen-go@latest github.com/fullstorydev/grpcurl@latest github.com/timakin/bodyclose@latest
	pip install mycli litecli
fi
cargo install cargo-edit cargo-update cargo-watch cargo-make rusty-tags stylua
pnpm add -g typescript eslint prettier typescript-language-server pyright
[ "$level" -gt 0 ] && pnpm add -g sass pug @vue/cli vls svelte-language-server vscode-langservers-extracted yaml-language-server emmet-ls
[ "$level" -gt 1 ] && pnpm add -g svgo ts-node nodemon http-server serve livereload
if ! command -v deno >/dev/null 2>&1; then
	curl -fsSL https://deno.land/x/install/install.sh | \
		DENO_INSTALL="${DENO_INSTALL_ROOT%/bin}" sh
fi

xi "cheat sheet tools" \
	cheat tealdeer
if [ "$level" -gt 0 ] && ! command -v cht.sh >/dev/null 2>&1; then
	doas curl -o /usr/local/bin/cht.sh https://cht.sh/:cht.sh
	doas chmod +x /usr/local/bin/cht.sh
fi

xi "docker" \
	docker docker-compose docker-credential-pass

xi "arduino" \
	- arduino arduino-cli

xi "markup/latex tools" \
	pandoc groff mdocml texlive \
	-- texlive-full

xi "networking tools" \
	nmap netcat lsof traceroute mtr wireshark wireshark-qt termshark inetutils iputils net-tools bind-utils socat websocat iperf3 arp-scan tcpreplay netsniff-ng aircrack-ng ettercap bettercap macchanger sqlmap wrk hey wuzz \
	- hashcat hashcat-utils sslscan testssl.sh radamsa nemesis \
	-- geoip geoip-data proxychains-ng thc-hydra kismet john urh
cargo install xh
pip install mitmproxy

xi "fonts" \
	font-ibm-plex-otf font-inconsolata-otf amiri-font fonts-croscore-ttf

PROGRAMSDIR="${PROGRAMSDIR:-$HOME/programs}"
[ -d "$PROGRAMSDIR" ] || mkdir -p "$PROGRAMSDIR"

xi "surf dependencies" \
	webkit2gtk-devel gcr-devel gst-libav gst-plugins-good1

xi "sent dependencies" \
	farbfeld

[ -x "$cdir/.local/bin/sysupdate" ] && "$cdir/.local/bin/sysupdate" -local

if [ ! -f "${XDG_CONFIG_HOME:-$HOME/.config}/nvim/autoload/plug.vim" ]; then
	echo "installing vim plug..."
	curl --create-dirs -fLo "${XDG_CONFIG_HOME:-$HOME/.config}/nvim/autoload/plug.vim" https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi

if [ -f /usr/lib/mpv-mpris/mpris.so ] && [ ! -f "$HOME/.config/mpv/scripts/mpris.so" ]; then
	echo "linking mpv-mpris plugin..."
	[ -d "$HOME/.config/mpv/scripts" ] || mkdir -p "$HOME/.config/mpv/scripts"
	doas ln -s /usr/lib/mpv-mpris/mpris.so "$HOME/.config/mpv/scripts/mpris.so"
fi

echo "changing default shell to zsh..."
chsh -s "$(which zsh)"
