#!/bin/sh

set -eu

HERE="$(dirname "$(readlink -f "$0")")"
. "$HERE/.config/shell/env"

SETUP_PROGRAMS_DIR="${SETUP_PROGRAMS_DIR:-$HOME/programs}"
SETUP_BROWSER_DIR="${SETUP_BROWSER_DIR:-$HOME/.zen}"
SETUP_PKGS_FILE="${SETUP_PKGS_FILE:-$XDG_DATA_HOME/meta/pkgs.txt}"
SETUP_PKGS_AUR_FILE="${SETUP_PKGS_AUR_FILE:-$XDG_DATA_HOME/meta/pkgs_aur.txt}"

# shellcheck disable=2015
sudocmd="$([ -f /etc/doas.conf ] && command -v doas 2>/dev/null || command -v sudo 2>/dev/null)"

[ "$(id -u)" -eq 0 ] && {
	echo "$(basename "$0"): this script should not run as root" >&2
	exit 1
}

setup_dotfiles() {
	cp -srfvt "$HOME" "$HERE/.config" "$HERE/.local"
	ln -sfv "$XDG_CONFIG_HOME/shell/profile" "$HOME/.zprofile"
	$sudocmd cp -rfvt /etc "$HERE/etc/."
	$sudocmd cp -afvt /etc /usr/share/pipewire /usr/share/wireplumber
	$sudocmd mkdir -pv /var/cache/zsh
}

setup_pkgs() {
	$sudocmd pacman -Syu --noconfirm
	$sudocmd pacman -S --needed --noconfirm artix-archlinux-support &&
		$sudocmd pacman-key --populate archlinux &&
		$sudocmd pacman -Sy --noconfirm
	[ -f "$SETUP_PKGS_FILE" ] &&
		$sudocmd pacman -S --needed --noconfirm - <"$SETUP_PKGS_FILE"
	[ -f "$SETUP_PKGS_AUR_FILE" ] && {
		command -v paru >/dev/null 2>&1 || {
			git clone https://aur.archlinux.org/paru.git "$SETUP_PROGRAMS_DIR/paru" &&
				makepkg -siD "$SETUP_PROGRAMS_DIR/paru"
		}
		paru -Sa --needed --noconfirm --sudo "$sudocmd" - <"$SETUP_PKGS_AUR_FILE"
	}
	rustup default stable &&
		cargo install cargo-update cargo-info
}

setup_user() {
	chsh -s "$(which zsh)"
	$sudocmd ln -sfT dash /usr/bin/sh
	$sudocmd usermod -aG video,audio,input,power,storage,optical,lp,scanner,dbus,docker,adbusers,uucp "$USER"
}

setup_runit() {
	$sudocmd rm -vf \
		/run/runit/service/agetty-tty4 \
		/run/runit/service/agetty-tty5 \
		/run/runit/service/agetty-tty6
	$sudocmd ln -svft /run/runit/service \
		/etc/runit/sv/socklog \
		/etc/runit/sv/klog \
		/etc/runit/sv/dbus \
		/etc/runit/sv/udevd \
		/etc/runit/sv/chrony \
		/etc/runit/sv/elogind \
		/etc/runit/sv/dhcpcd \
		/etc/runit/sv/wpa_supplicant \
		/etc/runit/sv/bluetoothd \
		/etc/runit/sv/cronie \
		/etc/runit/sv/tlp \
		/etc/runit/sv/sshd \
		/etc/runit/sv/docker
}

setup_browser() {
	[ -d "$SETUP_BROWSER_DIR" ] ||
		{
			$BROWSER --headless >/dev/null 2>&1 &
			ffpid=$!
			sleep 1
		}
	sed -n "/Default=.*\..*/s/.*=//p" "$SETUP_BROWSER_DIR/profiles.ini" |
		while IFS= read -r profile; do
			cat "/usr/share/arkenfox-user.js/user.js" "$XDG_CONFIG_HOME/firefox/user.js" >"$SETUP_BROWSER_DIR/$profile/user.js"
			[ "$BROWSER" != "firefox" ] &&
				[ -f "$XDG_CONFIG_HOME/$BROWSER/user.js" ] &&
				cat "$XDG_CONFIG_HOME/$BROWSER/user.js" >>"$SETUP_BROWSER_DIR/$profile/user.js"

		done
	# shellcheck disable=2015
	[ -n "${ffpid:-}" ] && kill "$ffpid" || true
}

clean() {
	cd "$HERE" || exit 1
	find .config .local -type f -exec rm -vf "$HOME/{}" \;
	sed -n "/Default=.*\..*/s/.*=//p" "$SETUP_BROWSER_DIR/profiles.ini" |
		while IFS= read -r profile; do
			[ -f "$SETUP_BROWSER_DIR/$profile/user.js" ] &&
				rm -vf "$SETUP_BROWSER_DIR/$profile/user.js"
		done
}

case "${1:-dotfiles}" in
	all)
		setup_dotfiles
		setup_pkgs
		setup_user
		setup_runit
		setup_browser
		;;
	dotfiles) setup_dotfiles ;;
	pkgs) setup_pkgs ;;
	user) setup_user ;;
	runit) setup_runit ;;
	browser) setup_browser ;;
	clean) clean ;;
	*)
		echo "$(basename "$0"): unknown command: $1" >&2
		exit 1
		;;
esac
